@model SmarterBalanced.SampleItems.Core.Repos.Models.ItemViewModel

<div class="local-nav">
    <ul class="list-inline">
        <li><a href="" data-toggle="modal" data-target="#viewMore">View More</a></li>
        <li><a href="" data-toggle="modal" data-target="#aboutThisItem">About This Item</a></li>
        <li><a href="" data-toggle="modal" data-target="#accessibility">Item Accessibility</a></li>
    </ul>
</div>

<hr/>

<div class="row">

    <div class="col-lg-12 col-md-12 col-sm-12">
        <iframe id="itemviewer-iframe" class="itemviewer-iframe" src="@Model.ItemViewerServiceUrl"></iframe>
    </div>
</div>

<div id="viewMore" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- "View More" Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">View More</h4>
            </div>
            <div class="modal-body">
                <p>Other items will be displayed here.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div id="aboutThisItem" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- "About This Item" Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">About This Item</h4>
            </div>
            <div class="modal-body">
                <p>Text about this item will be displayed here.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div id="accessibility" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Local Accessibility Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Item Accessibility</h4>
            </div>
            <div id="accessibilityContent" class="modal-body">
                @Html.Partial("_LocalAccessibility", Model.LocalAccessibilityViewModel)
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>

    // Resets item accessibility to global accessibility.
    function resetToGlobalAcc() {
        var url = '@Html.Raw(Url.Action("ResetToGlobalAccessibility", "Item",
                 new { bankKey = Model.ItemDigest.BankKey, itemKey = Model.ItemDigest.ItemKey }))';
        $.ajax({
            url: url, 
            type: "GET",
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            success: function (result) {
                var id = "accessibilityContent";
                manager.ReplaceAccessibilityContent(id, result);
            },
            failure: function (result){
                console.log("RESET ACCESSIBILITY SERVER FAILURE");
            },
            error: function (result){
                console.log("RESET ACCESSIBILITY SERVER ERROR");
            }
        });
    }


    function ItemPageManager() {
        var manager = this;
        var accessibilityDict = { };

        this.Setup = function () {
            manager.BindAccessibilityChange();
            manager.BindAccessibilityUpdateBtn();
        }

        this.ToISAAP = function () {
            var keys = Object.values(accessibilityDict);
            return keys.join(";");
        }
        
        this.OnAccessibilityChange = function(eventData){
            manager.SetAccessibilityDictItem(eventData.target);
        }

        this.SetAccessibilityDictItem = function(item){
            var id = item.id;
            var key = item.options[item.selectedIndex].value;
            accessibilityDict[id] = key;
        }

        this.ReplaceAccessibilityContent = function(id, newContent){
            var modalContent = document.getElementById(id);
            modalContent.innerHTML = newContent;

            manager.BindAccessibilityChange();
            manager.BindAccessibilityUpdateBtn();
            manager.UpdateISAAP();
        }

        this.UpdateISAAP = function(eventData){
            var iframe = document.getElementById("itemviewer-iframe");
            var url = iframe.src;
            var urlparts = url.split("isaap");
            console.log(urlparts);
            console.log(manager.ToISAAP());
            iframe.src = urlparts[0] + "isaap=" + manager.ToISAAP();
            iframe.contentWindow.location.reload();
        }

        this.BindAccessibilityUpdateBtn = function () {
            var btn = document.getElementById("accessibilityUpdateBtn");
            btn.addEventListener("click", manager.UpdateISAAP);
        }

        this.BindAccessibilityChange = function () {
            var accessibilityElements = [].slice.call(document.getElementsByClassName("accessibilityResources"));

            accessibilityElements.forEach(function(element) {
                element.addEventListener("change", manager.OnAccessibilityChange);
                manager.SetAccessibilityDictItem(element);
            });
        }
       
    }

    var manager = new ItemPageManager();
    manager.Setup();
   
</script>