<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <VersionPrefix>2.1.0</VersionPrefix>
    <TargetFramework>netcoreapp2.0</TargetFramework>
    <DebugType>portable</DebugType>
    <PreserveCompilationContext>true</PreserveCompilationContext>
    <AssemblyName>SmarterBalanced.SampleItems.Web</AssemblyName>
    <OutputType>Exe</OutputType>
    <PackageId>SmarterBalanced.SampleItems.Web</PackageId>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <Authors>OSU CASS SDG</Authors>
    <Company>Smarter Balanced</Company>
    <Product>AP_ItemSampler</Product>
    <PackageProjectUrl>https://github.com/SmarterApp/AP_ItemSampler</PackageProjectUrl>
    <RepositoryUrl>https://github.com/SmarterApp/AP_ItemSampler</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageLicenseUrl>https://github.com/SmarterApp/AP_ItemSampler/blob/master/LICENSE</PackageLicenseUrl>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\SmarterBalanced.SampleItems.Core\SmarterBalanced.SampleItems.Core.csproj" />
    <ProjectReference Include="..\SmarterBalanced.SampleItems.Dal\SmarterBalanced.SampleItems.Dal.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="..\..\ClaimConfigurations\ItemsPatch.xml" Link="config\ItemsPatch.xml">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="..\..\ClaimConfigurations\ClaimsConfig.xml" Link="config\ClaimsConfig.xml">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="..\..\CoreStandardsConfigurations\CoreStandards.xml" Link="config\CoreStandards.xml">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="..\..\InteractionTypeConfigurations\InteractionTypes.xml" Link="config\InteractionTypes.xml">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="..\..\AccessibilityAccommodationConfigurations\AccessibilityConfig.xml" Link="config\AccessibilityConfig.xml">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>

  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.All" Version="2.0.0" />
    <PackageReference Include="CoreFtp" Version="1.3.6" />
    <PackageReference Include="SimpleMvcSitemap" Version="3.1.0" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="1.0.0" />
  </ItemGroup>

  <ItemGroup>
    <None Update=".dockerignore">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="Dockerfile">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <ItemGroup>
    <DotNetCliToolReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Tools" Version="2.0.0" />
  </ItemGroup>

  <Target Name="DebugRunWebpack" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('wwwroot\dist') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />

    <!-- In development, the dist files won't exist on the first run or when cloning to
         a different machine, so rebuild them if not already present. -->
    <Message Importance="high" Text="Performing first-run Webpack build..." />
    <Exec Command="node node_modules/webpack/bin/webpack.js --config webpack.config.vendor.js" />
    <Exec Command="node node_modules/webpack/bin/webpack.js" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec Command="npm install" />
    <Exec Command="node node_modules/webpack/bin/webpack.js --config webpack.config.vendor.js --env.prod" />
    <Exec Command="node node_modules/webpack/bin/webpack.js --env.prod" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="wwwroot\dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

  
</Project>
